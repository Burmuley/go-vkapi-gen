{{define "go_type"}}
    {{- $r := .GetGoType -}}
    {{- $l := len $r -}}
    {{- if le $l 1 -}}
        {{printf "%s" ( printf "%s" (index $r 0)) -}}
    {{else -}}
        {{- print " struct {\n" -}}
        {{- range $t := $r -}}
            {{ printf "\t\t%s\n" $t -}}
        {{end -}}
        {{print "}" -}}
    {{end -}}
{{end}}
{{range $key, $value := . -}}
// {{cutSuffix (convertName $key) "Response"}} type represents `{{$key}}` API response object
{{ $response := (index ($value.GetProperties false) "response") -}}
{{if or (IsInt $response) (IsString $response) (IsBuiltin $response) (IsArray $response) (IsNumber $response) (IsInterface $response) (IsBoolean $response) -}}
type {{cutSuffix (convertName $key) "Response"}} {{template "go_type" $response}}{{ if (len $response.GetDescription) gt 0}} // {{$response.GetDescription}}{{end}}
{{else if (IsObject $response) -}}
type {{cutSuffix (convertName $key) "Response"}} struct {
{{if (IsObject $response) -}}
{{range $ok, $ov := ($response.GetProperties false) -}}
{{print "\t"}}{{convertName $ok}} {{if (IsArray $ov)}}[]{{end}}{{template "go_type" $ov}} `json:"{{$ok}}"`  {{ if (len $ov.GetDescription) gt 0}}// {{$ov.GetDescription}}{{end}}
{{end -}}
}
{{else -}}
{{template "go_type" $response}}
{{end}}
{{end -}}
{{end -}}
